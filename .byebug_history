c
params
c
quit
c
parsed_feed_entries
c
parsed_feed_entries.first
parsed_feed_entries
c
parsed_feed_entries.first[:feed]
c
parsed_feed_entries.first[:feed]
parsed_feed_entries.first[feed]
parsed_feed_entries.first.feed
parsed_feed_entries.first
parsed_feed_entries
c
@collection_feed
quit
CollectionFeed.where(collection_id: params[:collection_feed][:collection_id]).where(feed_id: params[:collection_feed][:feed_id]).firstquit
CollectionFeed.where(collection_id: params[:collection_feed][:collection_id]).where(feed_id: params[:collection_feed][:feed_id]).first
CollectionFeed.where(collection_id: params[:collection_feed][:collection_id]).where(feed_id: params[:collection_feed][:feed_id])
params[:collection_id]
params
CollectionFeed.where(collection_id: params[:collection_id])
CollectionFeed.where(collection_id: params[:collection_id]).where(feed_id: params[:feed_id])
CollectionFeed.find_by(feed_id: 3)
params
c
entries.flatten.length
entries.flatten
entries.length
entries
entries.first.first[:published] <=> entries.first.last[:published]
entries.first.first[:published]
entries.first.first[:published[
entries.first.first.published
entries.first.first
entries.first
entries.first.published
entries
quit
a
distance_of_time_in_words(a)
time_ago_in_words(a)
a.is_a?(Time)
Time
a
a.entry
type(a)
a.is_a?(String)
a.is_a?(string)
class(a)
Class(a)
a
a.is_a?(Date)
a.is_a?
a
a = entry.published
entry.published[0..-5]
Date.new(entry.published[0..-5])ent
Date.new(entry.published[0..-5])
Date.new(entry.published[0..-5)
Date.new(entry.published)
entry.published
entry
quit
QUIT
C
c
@feeds.first
@feeds.first.entries
@feeds
c
cc
c
entry.content
entry
quit
c
image
s
entry.image
entry
quit
c
entry.image
/<img\s[^>]*?src\s*=\s*['\"]([^'\"]*?)['\"][^>]*?>/.match(entry.summary)[1]
entry.image
entry.summary
entry.title
entry
c
feedjira_entries(@feed)
@feed
c
@feed
c
source.url
source
c
@feeds
c
params[:user]
params
c
params
